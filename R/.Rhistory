) # Add vertical lines between groups
predplot_df_filt <- predplot_df_filt %>%
filter(Mean != 0)
# Create the bar graph with error bars and updated styling
ggplot(predplot_df_filt, aes(x = Predictor, y = Mean, fill = Response)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),   color = "grey55") + # Bar chart
geom_errorbar(
aes(ymin = Mean - StdError, ymax = Mean + StdError),
width = 0.2,
position = position_dodge(width = 0.9)
) + # Error bars
labs(
x = "Predictor",
y = "Coefficient ",
fill = "Response",
title = "Keystone Predator System - Annual Timestep"
) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = unit(c(1, 1, 1, 2), "lines") # Adjust left margin
) +
scale_fill_brewer(palette = "Set3") + # Optional color palette
scale_x_discrete(
expand = expansion(mult = c(0, 0)) # Remove extra space on x-axis
) +
geom_vline(
xintercept = seq(0.5, length(unique(predplot_df_filt$Predictor)), by = 1),
color = "black",
linetype = "solid"
) # Add vertical lines between groups
sciaenidplot_df_filt <- sciaenidplot_df_filt %>%
filter(Mean != 0)
# Create the bar graph with error bars and updated styling
ggplot(sciaenidplot_df_filt, aes(x = Predictor, y = Mean, fill = Response)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),   color = "grey55") + # Bar chart
geom_errorbar(
aes(ymin = Mean - StdError, ymax = Mean + StdError),
width = 0.2,
position = position_dodge(width = 0.9)
) + # Error bars
labs(
x = "Predictor",
y = "Coefficient ",
fill = "Response",
title = "Sciaenid System - Annual Timestep"
) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = unit(c(1, 1, 1, 2), "lines") # Adjust left margin
) +
scale_fill_brewer(palette = "Set3") + # Optional color palette
scale_x_discrete(
expand = expansion(mult = c(0, 0)) # Remove extra space on x-axis
) +
geom_vline(
xintercept = seq(0.5, length(unique(sciaenidplot_df_filt$Predictor)), by = 1),
color = "black",
linetype = "solid"
) # Add vertical lines between groups
SeasonalSciaenidSummaryPlot<-ggplot(sciaenidplot_df_filt_Season, aes(x = Predictor, y = Mean, fill = Response)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),   color = "grey55") + # Bar chart
geom_errorbar(
aes(ymin = Mean - StdError, ymax = Mean + StdError),
width = 0.2,
position = position_dodge(width = 0.9)
) + # Error bars
labs(
x = "Predictor",
y = "Coefficient ",
fill = "Response",
title = "Sciaenid System - Seasonal Timestep"
) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = unit(c(1, 1, 1, 2), "lines") # Adjust left margin
) +
scale_fill_brewer(palette = "Set3") + # Optional color palette
scale_x_discrete(
expand = expansion(mult = c(0, 0)) # Remove extra space on x-axis
) +
geom_vline(
xintercept = seq(0.5, length(unique(sciaenidplot_df_filt_Season$Predictor)), by = 1),
color = "black",
linetype = "solid"
) # Add vertical lines between groups
AnnualSciaenidSummaryPlot<-ggplot(sciaenidplot_df_filt, aes(x = Predictor, y = Mean, fill = Response)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),   color = "grey55") + # Bar chart
geom_errorbar(
aes(ymin = Mean - StdError, ymax = Mean + StdError),
width = 0.2,
position = position_dodge(width = 0.9)
) + # Error bars
labs(
x = "Predictor",
y = "Coefficient ",
fill = "Response",
title = "Sciaenid System - Annual Timestep"
) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = unit(c(1, 1, 1, 2), "lines") # Adjust left margin
) +
scale_fill_brewer(palette = "Set3") + # Optional color palette
scale_x_discrete(
expand = expansion(mult = c(0, 0)) # Remove extra space on x-axis
) +
geom_vline(
xintercept = seq(0.5, length(unique(sciaenidplot_df_filt$Predictor)), by = 1),
color = "black",
linetype = "solid"
) # Add vertical lines between groups
AnnualPredSummaryPlot<-ggplot(predplot_df_filt, aes(x = Predictor, y = Mean, fill = Response)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),   color = "grey55") + # Bar chart
geom_errorbar(
aes(ymin = Mean - StdError, ymax = Mean + StdError),
width = 0.2,
position = position_dodge(width = 0.9)
) + # Error bars
labs(
x = "Predictor",
y = "Coefficient ",
fill = "Response",
title = "Keystone Predator System - Annual Timestep"
) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = unit(c(1, 1, 1, 2), "lines") # Adjust left margin
) +
scale_fill_brewer(palette = "Set3") + # Optional color palette
scale_x_discrete(
expand = expansion(mult = c(0, 0)) # Remove extra space on x-axis
) +
geom_vline(
xintercept = seq(0.5, length(unique(predplot_df_filt$Predictor)), by = 1),
color = "black",
linetype = "solid"
) # Add vertical lines between groups
CombinedPlot <- SeasonalPredSummaryPlot / AnnuallPredSummaryPlot
CombinedPlot <- SeasonalPredSummaryPlot / AnnualPredSummaryPlot
ggsave(
filename = "CombinedPredPlot.png",  # File name
plot = CombinedPredPlot,                  # Combined plot object
width = 10,                           # Adjust as needed
height = 14,                          # Adjust height for stacked plots
dpi = 300                             # Resolution
)
# Combine the two plots vertically
CombinedPredPlot <- SeasonalPredSummaryPlot / AnnualPredSummaryPlot
# Export the combined plot
ggsave(
filename = "CombinedPredPlot.png",  # File name
plot = CombinedPredPlot,                  # Combined plot object
width = 10,                           # Adjust as needed
height = 14,                          # Adjust height for stacked plots
dpi = 300                             # Resolution
)
# Combine the two plots vertically
CombinedPredPlot <- plot_grid(
SeasonalPredSummaryPlot,
AnnuallPredSummaryPlot,
ncol = 1,  # Number of columns (1 for vertical stacking)
align = "v"  # Align vertically
)
# Combine the two plots vertically
CombinedPredPlot <- plot_grid(
SeasonalPredSummaryPlot,
AnnualPredSummaryPlot,
ncol = 1,  # Number of columns (1 for vertical stacking)
align = "v"  # Align vertically
)
# Export the combined plot
ggsave(
filename = "CombinedPredPlot.png",
plot = CombinedPredPlot,
width = 10,
height = 14,
dpi = 300
)
# Create the bar graph with error bars and updated styling
SeasonalPredSummaryPlot<-ggplot(predplot_df_filt_Season, aes(x = Predictor, y = Mean, fill = Response)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),   color = "grey55") + # Bar chart
geom_errorbar(
aes(ymin = Mean - StdError, ymax = Mean + StdError),
width = 0.2,
position = position_dodge(width = 0.9)
) + # Error bars
labs(
x = "Predictor",
y = "Coefficient ",
fill = "Response",
title = "Keystone Predator System - Seasonal Timestep"
) +
theme_bw() +
theme(text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = unit(c(1, 1, 1, 2), "lines") # Adjust left margin
) +
scale_fill_brewer(palette = "Set3") + # Optional color palette
scale_x_discrete(
expand = expansion(mult = c(0, 0)) # Remove extra space on x-axis
) +
geom_vline(
xintercept = seq(0.5, length(unique(predplot_df_filt_Season$Predictor)), by = 1),
color = "black",
linetype = "solid"
) # Add vertical lines between groups
SeasonalPredSummaryPlot
library(cowplot)
# Combine the two plots vertically
CombinedPredPlot <- plot_grid(
SeasonalPredSummaryPlot,
AnnualPredSummaryPlot,
ncol = 1,  # Number of columns (1 for vertical stacking)
align = "v"  # Align vertically
)
# Export the combined plot
ggsave(
filename = "CombinedPredPlot.png",
plot = CombinedPredPlot,
width = 10,
height = 14,
dpi = 300
)
# Create the bar graph with error bars and updated styling
SeasonalPredSummaryPlot<-ggplot(predplot_df_filt_Season, aes(x = Predictor, y = Mean, fill = Response)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),   color = "grey55") + # Bar chart
geom_errorbar(
aes(ymin = Mean - StdError, ymax = Mean + StdError),
width = 0.2,
position = position_dodge(width = 0.9)
) + # Error bars
labs(
x = "Predictor",
y = "Coefficient ",
fill = "Response",
title = "Keystone Predator System - Seasonal Timestep"
) +
theme_bw() +
theme(text = element_text(size = 14),
axis.text.x = element_text(angle = 0, hjust = 1),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = unit(c(1, 1, 1, 2), "lines") # Adjust left margin
) +
scale_fill_brewer(palette = "Set3") + # Optional color palette
scale_x_discrete(
expand = expansion(mult = c(0, 0)) # Remove extra space on x-axis
) +
geom_vline(
xintercept = seq(0.5, length(unique(predplot_df_filt_Season$Predictor)), by = 1),
color = "black",
linetype = "solid"
) # Add vertical lines between groups
SeasonalPredSummaryPlot
library(cowplot)
# Combine the two plots vertically
CombinedPredPlot <- plot_grid(
SeasonalPredSummaryPlot,
AnnualPredSummaryPlot,
ncol = 1,  # Number of columns (1 for vertical stacking)
align = "v"  # Align vertically
)
# Export the combined plot
ggsave(
filename = "CombinedPredPlot.png",
plot = CombinedPredPlot,
width = 10,
height = 14,
dpi = 300
)
# Create the bar graph with error bars and updated styling
SeasonalPredSummaryPlot<-ggplot(predplot_df_filt_Season, aes(x = Predictor, y = Mean, fill = Response)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),   color = "grey55") + # Bar chart
geom_errorbar(
aes(ymin = Mean - StdError, ymax = Mean + StdError),
width = 0.2,
position = position_dodge(width = 0.9)
) + # Error bars
labs(
x = "Predictor",
y = "Coefficient ",
fill = "Response",
title = "Keystone Predator System - Seasonal Timestep"
) +
theme_bw() +
theme(text = element_text(size = 14),
axis.text.x = element_text(angle = 0),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = unit(c(1, 1, 1, 2), "lines") # Adjust left margin
) +
scale_fill_brewer(palette = "Set3") + # Optional color palette
scale_x_discrete(
expand = expansion(mult = c(0, 0)) # Remove extra space on x-axis
) +
geom_vline(
xintercept = seq(0.5, length(unique(predplot_df_filt_Season$Predictor)), by = 1),
color = "black",
linetype = "solid"
) # Add vertical lines between groups
SeasonalPredSummaryPlot
library(cowplot)
# Combine the two plots vertically
CombinedPredPlot <- plot_grid(
SeasonalPredSummaryPlot,
AnnualPredSummaryPlot,
ncol = 1,  # Number of columns (1 for vertical stacking)
align = "v"  # Align vertically
)
# Export the combined plot
ggsave(
filename = "CombinedPredPlot.png",
plot = CombinedPredPlot,
width = 10,
height = 14,
dpi = 300
)
SeasonalSciaenidSummaryPlot<-ggplot(sciaenidplot_df_filt_Season, aes(x = Predictor, y = Mean, fill = Response)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),   color = "grey55") + # Bar chart
geom_errorbar(
aes(ymin = Mean - StdError, ymax = Mean + StdError),
width = 0.2,
position = position_dodge(width = 0.9)
) + # Error bars
labs(
x = "Predictor",
y = "Coefficient ",
fill = "Response",
title = "Sciaenid System - Seasonal Timestep"
) +
theme_bw() +
theme(text = element_text(size = 14),
axis.text.x = element_text(angle = 0),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = unit(c(1, 1, 1, 2), "lines") # Adjust left margin
) +
scale_fill_brewer(palette = "Set3") + # Optional color palette
scale_x_discrete(
expand = expansion(mult = c(0, 0)) # Remove extra space on x-axis
) +
geom_vline(
xintercept = seq(0.5, length(unique(sciaenidplot_df_filt_Season$Predictor)), by = 1),
color = "black",
linetype = "solid"
) # Add vertical lines between groups
AnnualSciaenidSummaryPlot<-ggplot(sciaenidplot_df_filt, aes(x = Predictor, y = Mean, fill = Response)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),   color = "grey55") + # Bar chart
geom_errorbar(
aes(ymin = Mean - StdError, ymax = Mean + StdError),
width = 0.2,
position = position_dodge(width = 0.9)
) + # Error bars
labs(
x = "Predictor",
y = "Coefficient ",
fill = "Response",
title = "Sciaenid System - Annual Timestep"
) +
theme_bw() +
theme(text = element_text(size = 14),
axis.text.x = element_text(angle = 0),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = unit(c(1, 1, 1, 2), "lines") # Adjust left margin
) +
scale_fill_brewer(palette = "Set3") + # Optional color palette
scale_x_discrete(
expand = expansion(mult = c(0, 0)) # Remove extra space on x-axis
) +
geom_vline(
xintercept = seq(0.5, length(unique(sciaenidplot_df_filt$Predictor)), by = 1),
color = "black",
linetype = "solid"
) # Add vertical lines between groups
# Create the bar graph with error bars and updated styling
AnnualPredSummaryPlot<-ggplot(predplot_df_filt, aes(x = Predictor, y = Mean, fill = Response)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),   color = "grey55") + # Bar chart
geom_errorbar(
aes(ymin = Mean - StdError, ymax = Mean + StdError),
width = 0.2,
position = position_dodge(width = 0.9)
) + # Error bars
labs(
x = "Predictor",
y = "Coefficient ",
fill = "Response",
title = "Keystone Predator System - Annual Timestep"
) +
theme_bw() +
theme(text = element_text(size = 14),
axis.text.x = element_text(angle = 0),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = unit(c(1, 1, 1, 2), "lines") # Adjust left margin
) +
scale_fill_brewer(palette = "Set3") + # Optional color palette
scale_x_discrete(
expand = expansion(mult = c(0, 0)) # Remove extra space on x-axis
) +
geom_vline(
xintercept = seq(0.5, length(unique(predplot_df_filt$Predictor)), by = 1),
color = "black",
linetype = "solid"
) # Add vertical lines between groups
# Create the bar graph with error bars and updated styling
AnnualPredSummaryPlot<-ggplot(predplot_df_filt, aes(x = Predictor, y = Mean, fill = Response)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),   color = "grey55") + # Bar chart
geom_errorbar(
aes(ymin = Mean - StdError, ymax = Mean + StdError),
width = 0.2,
position = position_dodge(width = 0.9)
) + # Error bars
labs(
x = "Predictor",
y = "Coefficient ",
fill = "Response",
title = "Keystone Predator System - Annual Timestep"
) +
theme_bw() +
theme(text = element_text(size = 14),
axis.text.x = element_text(angle = 0),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.margin = unit(c(1, 1, 1, 2), "lines") # Adjust left margin
) +
scale_fill_brewer(palette = "Set3") + # Optional color palette
scale_x_discrete(
expand = expansion(mult = c(0, 0)) # Remove extra space on x-axis
) +
geom_vline(
xintercept = seq(0.5, length(unique(predplot_df_filt$Predictor)), by = 1),
color = "black",
linetype = "solid"
) # Add vertical lines between groups
# Combine the two plots vertically
CombinedPredPlot <- plot_grid(
SeasonalPredSummaryPlot,
AnnualPredSummaryPlot,
ncol = 1,  # Number of columns (1 for vertical stacking)
align = "v"  # Align vertically
)
# Export the combined plot
ggsave(
filename = "CombinedPredPlot.png",
plot = CombinedPredPlot,
width = 10,
height = 13,
dpi = 300
)
# Combine the two plots vertically
CombinedSciaenidPlot <- plot_grid(
SeasonalSciaenidSummaryPlot,
AnnualSciaenidSummaryPlot,
ncol = 1,  # Number of columns (1 for vertical stacking)
align = "v"  # Align vertically
)
# Export the combined plot
ggsave(
filename = "CombinedSciaenidPlot.png",
plot = CombinedSciaenidPlot,
width = 10,
height = 13,
dpi = 300
)
# Combine the two plots vertically
CombinedPredPlot <- plot_grid(
SeasonalPredSummaryPlot,
AnnualPredSummaryPlot,
ncol = 1,  # Number of columns (1 for vertical stacking)
align = "v"  # Align vertically
)
# Export the combined plot
ggsave(
filename = "CombinedPredPlot.png",
plot = CombinedPredPlot,
width = 10,
height = 12,
dpi = 300
)
# Combine the two plots vertically
CombinedSciaenidPlot <- plot_grid(
SeasonalSciaenidSummaryPlot,
AnnualSciaenidSummaryPlot,
ncol = 1,  # Number of columns (1 for vertical stacking)
align = "v"  # Align vertically
)
# Export the combined plot
ggsave(
filename = "CombinedSciaenidPlot.png",
plot = CombinedSciaenidPlot,
width = 10,
height = 12,
dpi = 300
)
